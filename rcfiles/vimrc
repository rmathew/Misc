" Configuration for Vim 8.x or better.
" $HOME/.vimrc is a symbolic-link to this file.

set nocompatible

set mouse=
set nobackup
set nowarn noerrorbells visualbell t_vb=
set ignorecase nohlsearch
set showmatch

" This causes a redraw-slowdown of ~5x (which *still* remains less than 1 ms).
syntax enable

set tabstop=8 shiftwidth=4
set autoindent smartindent cindent copyindent
" Customize cindent; see help-text for 'cinoptions-values'.
set cinoptions=>4,g2,h2,+2,(2,u2,:2,=2
set backspace=indent
" Tweak the indentation of Python code; see help-text for 'ft-python-indent'.
let g:pyindent_open_paren = '&sw'
let g:pyindent_nested_paren = '&sw'
let g:pyindent_continue = '&sw'

" Hide buffers instead of unloading them when they are abandoned - allows
" us to edit multiple files without having to repeatedly sav them.
set hidden

" Improve drawing for local terminals.
set ttyfast

" Fix ESC-latency (https://www.johnhawthorn.com/2012/09/vi-escape-delays/).
set timeout ttimeout timeoutlen=1024 ttimeoutlen=32

" Use relative line-numbers for quickly going to a given line - but only with
" Vim v8.1.0374 or later, as it is *too slow* otherwise:
"
"   https://old.reddit.com/r/vim/comments/9euctk/slow_scrollingrefresh_with_relativenumber_or/
"
" Widen the terminal-width to accommodate these line-numbers and display a
" sentinel line to mark column 80. Highlight the current line for quick
" orientation. Note that these options cause a *further* redraw-slowdown of
" ~2.75x (over 'syntax enable'), but it remains less than 5ms. (Mitigating
" the slowdown with 'lazyredraw' causes erratic display-updates.)
set nonumber relativenumber cursorline colorcolumn=80

" Show right-justified current & total lines, current column, and if-modified.
set showmode ruler
set rulerformat=%=%1.4l/%1.4L,\ %1.3c\ %m

" PaperColor Light theme (https://github.com/NLKNguyen/papercolor-theme).
set background=light
let g:PaperColor_Theme_Options = {
  \   'theme': {
  \     'default.light': {
  \       'allow_bold': 1,
  \       'transparent_background': 0,
  \       'override' : {
  \         'linenumber_fg' : ['', '0'],
  \         'linenumber_bg' : ['', '15'],
  \       }
  \     }
  \   }
  \ }
colorscheme PaperColor
" Fix the display of error-messages with PaperColor (see
" https://github.com/NLKNguyen/papercolor-theme/issues/118).
highlight ErrorMsg ctermfg=0 ctermbg=1
" Make warning-messages pop out with a yellow background.
highlight WarningMsg ctermfg=7 ctermbg=226

autocmd BufRead,BufNewFile *.htm4 setfiletype html

" NOTE: Create $HOME/.vim/indent/html.vim with 'let b:did_indent = 1' to
" disable auto-indenting for HTML-type files.

" In most source-code files, we do not want TAB characters. We also want to
" insert shiftwidth() spaces on pressing TAB. If we really want to insert a TAB
" character, we press Ctrl+V and then TAB.
autocmd BufNewFile,BufReadPre *.c setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.h setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.cc setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.hh setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.cpp setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.hpp setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.html setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.htm4 setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.xml setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.sh setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.py setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.java setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.hs setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.sql setlocal expandtab softtabstop=-1
autocmd BufNewFile,BufReadPre *.y setlocal expandtab softtabstop=-1
" Go is a special snowflake that needs TABs - make it appear less gross.
autocmd BufNewFile,BufReadPre *.go setlocal noexpandtab tabstop=4
